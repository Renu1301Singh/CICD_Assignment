name: Automated Testing

on: 
  push:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 10 * * 1'  # Run at 10:00 AM every Monday

jobs:
 
 postman_test:
    runs-on: ubuntu-latest
  
    steps:
     - name: Checkout Repository
       uses: actions/checkout@v2
   # Install Node.js
     - name: Install Node.js
       uses: actions/setup-node@v2
       with:
          node-version: '16.x' 

      # Install Newman CLI
     - name: Install Newman
       run: npm install -g newman

      # Install htmlextra-export reporter
     - name: Install htmlextra-export reporter
       run: npm install -g newman-reporter-htmlextra

     - name: Run Postman tests 
       run: newman run  "Postman_Assignment/Go_REST.postman_collection.json" -e "Postman_Assignment/Test_env.postman_environment.json" -r htmlextra --reporter-htmlextra-export testReport.html

     - name: Upload Postman Test Report
       if: always()  # Ensure reports are uploaded even if tests fail
       uses: actions/upload-artifact@v3
       with:
          name: Postman_Test_Report
          path: testReport.html

 Selenium_test:
    runs-on: ubuntu-latest
 
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
     
    - uses: browser-actions/setup-chrome@latest
    - run: chrome --version
     
    - name: Build with Maven
      run: |
       cd Magneto
       mvn -B clean test
       
    - name: Upload Test Reports

      uses: actions/upload-artifact@v3

      with:

        name: Selenium-test-reports
        if: always()  # Ensure reports are uploaded even if tests fail
        path: Magneto/target
         
 Nightwatch_test:
    runs-on: ubuntu-latest


    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
      
         cache: 'npm'

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: npm-install
        run: |
          cd DemoQA
          npm ci
      - run: |
          cd DemoQA
          sudo apt-get install xvfb
      - name: Run Nightwatch tests
        run: |
          cd DemoQA
          xvfb-run --auto-servernum npm test -- --env chrome
      - name: Upload test results
        if: always()  # Ensure reports are uploaded even if tests fail
        uses: actions/upload-artifact@v4
        with:
         name: Nightwatch-test-report
         path: DemoQA/tests_output 
         
 RestAssured_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11' 
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build and test
        run: |
          cd RestAssured  # Navigate to your RestAssured project directory
          mvn clean test

      - name: Upload test reports
        if: always()  # Ensure reports are uploaded even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: Restassured-test-reports
          path: RestAssured/target

        
 Jmeter_Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Download and Install JMeter
        run: |
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.6.3.tgz
          tar -xf apache-jmeter-5.6.3.tgz
          sudo mv apache-jmeter-5.6.3 /opt/
          echo 'export PATH=/opt/apache-jmeter-5.6.3/bin:$PATH' >> ~/.bashrc
          source ~/.bashrc
      - name: Run JMeter Tests
        run: /opt/apache-jmeter-5.6.3/bin/jmeter -n -t "JmeterAssignment/testingHTTP(S) Test Script Recorder.jmx"


      - name: Upload JMeter Report
        if: always()  # Ensure reports are uploaded even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-test-report
          path: JmeterAssignment
         


   
